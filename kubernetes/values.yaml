global:
  environment: local

kong:
  proxy:
    type: NodePort
    http:
      nodePort: 31001
    enabled: true
  ingressController:
    enabled: true
  env:
    database: "off"
  dblessConfig:
    configMap: "{{ .Release.Name }}-kong-config"

# Add the missing temporal postgres credentials
temporal:
  namespace: "default"
  postgres:
    user: "postgres"
    password: "postgres"
    url: "postgresql://postgres:postgres@{{ .Release.Name }}-postgresql:5432"

# web:
#   name: esd-web
#   replicaCount: 1
#   image:
#     repository: esd-web
#     tag: latest
#     pullPolicy: Never
#   service:
#     type: ClusterIP
#     port: 80
#     targetPort: 3000
#   env:
#     - name: NODE_ENV
#       value: production
#     - name: NEXT_PUBLIC_DEPLOYMENT_ENVIRONMENT
#       value: kubernetes

nginx:
  replicaCount: 1
  image:
    repository: nginx
    tag: stable
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 80
    targetPort: 80

api:
  name: esd-api
  replicaCount: 1
  image:
    repository: esd-api
    tag: latest
    pullPolicy: Never
  service:
    type: ClusterIP
    port: 80
    targetPort: 3001
  env:
    - name: NODE_ENV
      value: production
    - name: NEXT_PUBLIC_DEPLOYMENT_ENVIRONMENT
      value: kubernetes
# auth:
#   name: esd-auth
#   replicaCount: 1
#   image:
#     repository: esd-auth
#     tag: latest
#     pullPolicy: Never
#   service:
#     type: ClusterIP
#     port: 80
#     targetPort: 3002
#   env:
#     - name: NODE_ENV
#       value: production
#     - name: NEXT_PUBLIC_DEPLOYMENT_ENVIRONMENT
#       value: kubernetes
