generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  output        = "../src/generated/client"
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "../src/generated/zod"
  createInputTypes                 = false
  createModelTypes                 = true
  addInputTypeValidation           = false
  addIncludeType                   = false
  addSelectType                    = false
  validateWhereUniqueInput         = false
  createOptionalDefaultValuesTypes = false
  createRelationValuesTypes        = false
  createPartialTypes               = false
  useDefaultValidators             = false
  coerceDate                       = true
  writeNullishInModelTypes         = true
}

datasource db {
  provider = "postgresql"
  url      = env("DRIVER_POSTGRES_URL")
}


/// ENUM for Driver Availability
enum DriverAvailability {
  AVAILABLE
  ON_DELIVERY
  OFFLINE
}
enum OrderStatus {
  DRIVER_FOUND
  PICKED_UP
  DELIVERED
}

model Driver {
  id           String               @id @default(uuid())
  phone        String
  userId       String               @unique
  availability DriverAvailability   @default(OFFLINE)
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt

  assignments  OrderAssignment[]
}

model OrderAssignment {
  id            String       @id @default(uuid())
  driverId      String
  driver        Driver       @relation(fields: [driverId], references: [id])
  orderId       String
  orderStatus   OrderStatus  @default(DRIVER_FOUND)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}