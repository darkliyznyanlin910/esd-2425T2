generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "rhel-openssl-1.0.x"]
  output        = "../src/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String?
  password      String?  // Required for email/password authentication
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  accounts      Account[] // Relationship to Account model (OAuth logins)
  sessions      Session[] // Relationship to Session model (auth sessions)
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String?
  expires_at        Int?
  id_token          String?
  scope             String?
  token_type        String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId]) // Ensures unique OAuth accounts
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String @id
  token      String @unique
  expires    DateTime
}